name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./client

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci

      - name: Lint
        run: npm run lint

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: lint

    defaults:
      run:
        working-directory: ./client

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci

      - name: Type Check
        run: npx tsc --noEmit

      - name: Build
        run: npm run build

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        with:
          args: >
            -Dsonar.projectBaseDir=client
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  deploy-frontend:
    name: Deploy Frontend
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Setup Deploy Frontend
        run: echo "Preparing to deploy frontend..."
      - name: Deploy Frontend to Vercel
        run: echo "Triggering Vercel Deploy..."

  deploy-backend:
    name: Deploy Backend
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Setup Deploy Backend
        run: echo "Preparing to deploy backend..."
      - name: Deploy Backend to Railway
        run: echo "Triggering Railway Deploy..."

  notify:
    name: Notify on Slack
    runs-on: ubuntu-latest
    needs: [deploy-frontend, deploy-backend]
    if: success()
    steps:
      - name: Send Slack notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_MESSAGE: |
            âœ… *CI/CD Pipeline Complete!*
            *Branch:* ${{ github.ref_name }}
            *Commit:* ${{ github.sha }}
            *Status:* Success ðŸš€
            *Author:* ${{ github.actor }}
